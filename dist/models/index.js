"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const sequelize_1 = require("sequelize");
const database_1 = __importDefault(require("../config/database"));
const user_1 = __importDefault(require("./user"));
const book_1 = __importDefault(require("./book"));
const review_1 = __importDefault(require("./review"));
const rating_1 = __importDefault(require("./rating"));
const order_1 = __importDefault(require("./order"));
const author_1 = __importDefault(require("./author"));
const payment_1 = __importDefault(require("./payment"));
const db = {};
db.sequelize = database_1.default;
db.Sequelize = sequelize_1.Sequelize;
db.User = user_1.default;
db.Book = book_1.default;
db.Review = review_1.default;
db.Rating = rating_1.default;
db.Order = order_1.default;
db.Author = author_1.default;
db.Payment = payment_1.default;
user_1.default.hasMany(review_1.default, { foreignKey: 'userId' });
review_1.default.belongsTo(user_1.default, { foreignKey: 'userId' });
user_1.default.hasMany(rating_1.default, { foreignKey: 'userId' });
rating_1.default.belongsTo(user_1.default, { foreignKey: 'userId' });
user_1.default.hasMany(payment_1.default, { foreignKey: 'userId' });
payment_1.default.belongsTo(user_1.default, { foreignKey: 'userId' });
user_1.default.hasMany(order_1.default, { foreignKey: 'userId' });
order_1.default.belongsTo(user_1.default, { foreignKey: 'userId' });
book_1.default.hasMany(review_1.default, { foreignKey: 'bookId' });
review_1.default.belongsTo(book_1.default, { foreignKey: 'bookId' });
book_1.default.hasMany(rating_1.default, { foreignKey: 'bookId' });
rating_1.default.belongsTo(book_1.default, { foreignKey: 'bookId' });
book_1.default.hasMany(payment_1.default, { foreignKey: 'bookId' });
payment_1.default.belongsTo(book_1.default, { foreignKey: 'bookId' });
book_1.default.hasMany(order_1.default, { foreignKey: 'bookId' });
order_1.default.belongsTo(book_1.default, { foreignKey: 'bookId' });
author_1.default.belongsToMany(book_1.default, { through: 'BookAuthors' });
book_1.default.belongsToMany(author_1.default, { through: 'BookAuthors' });
exports.default = db;
//# sourceMappingURL=index.js.map